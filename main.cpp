//#pragma GCC optimize(3,"inline","Ofast")
//version 0.7.5
#include <iostream>
#include "computational.h"
#include <cmath>
#include <ctime>
using namespace std;
using namespace malg;
int main()
{
    auto stra = string("106697219132480173106064317148705638676529121742557567770857687729397446898790451577487723991083173010242416863238099716044775658681981821407922722052778958942891831033512463262741053961681512908218003840408526915629689432111480588966800949428079015682624591636010678691927285321708935076221951173426894836169");
    auto strb = string("144819424465842307806353672547344125290716753535239658417883828941232509622838692761917211806963011168822281666033695157426515864265527046213326145174398018859056439431422867957079149967592078894410082695714160599647180947207504108618794637872261572262805565517756922288320779308895819726074229154002310375209");
    auto stre = string("109931986732829734979866232821433543901088049");
    BigInt a(stra);
    BigInt b(strb);
    BigInt e("123456789012345");
    auto start = std::chrono::system_clock::now();
    std::cout << Fibonacci(10000000) << endl;
    auto end = std::chrono::system_clock::now();    
    std::cout << "total time=" << std::chrono::duration_cast<std::chrono::microseconds>(end - start).count() << std::endl;
    system("pause");
    return 0;
}
                                    
                    
                                    